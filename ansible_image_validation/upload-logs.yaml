---
- set_fact:
    hostname: "{{ item }}"
    current_time: "{{ ansible_date_time.iso8601 }}"
    current_epoch: "{{ ansible_date_time.epoch }}"

- name: Recursively find all the log files
  find:
    paths: "./validation_results/{{ hostname }}"
    recurse: yes
  register: logfiles

# - debug:
#     msg: "{{ hostname }}{{ item.path.split('tmp')[1] }}"
#   loop: "{{ logfiles.files }}"

- name: Upload yum repolist errors file to storage account
  azure_rm_storageblob:
    resource_group: pbasnal-rg
    storage_account_name: pbasnalimagestore
    container: imagevalidations
    blob: "{{ hostname }}{{ item.path.split('tmp')[1] }}"
    src: "{{ item.path }}"
    public_access: container
    tags:
      validation_time: "{{ current_time }}"
    force: yes 
  loop: "{{ logfiles.files }}"

  #(cd /tmp; find . -maxdepth 1 -type f) | cut -d'/' -f2
# - name: Set validation status as failed if the err file is not empty
#   set_fact:
#     validation_result: "Failed"
#   when: errfileout.stdout != ""

# - name: Set validation status as success if the err file is not empty
#   set_fact:
#     validation_result: "Success"
#   when: errfileout.stdout == ""

- name: Create table entry
  shell: "./set_validation_results.sh {{hostname}} {{ current_epoch }} {{current_time}}" # {{validation_result}}"