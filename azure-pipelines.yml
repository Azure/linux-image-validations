# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo "Setting up Terraform"
    cd azure/
    terraform init
  displayName: 'Setup Terraform environment'

- script: |
      cd azure/
      terraform apply -auto-approve
  env:
    TF_VAR_image_name: $(image-name)
    TF_VAR_blob_uri: $(blob-uri)
    TF_VAR_existing_rg: $(existing-rg)
    ARM_CLIENT_ID: $(client-id)
    ARM_CLIENT_SECRET: $(client-secret)
    ARM_SUBSCRIPTION_ID: $(subscription-id)
    ARM_TENANT_ID: $(tenant-id)

  displayName: 'Deploy Azure Resources with Terraform'

- script: |
      cd azure/
      terraform destroy -auto-approve
  env:
    TF_VAR_image_name: $(image-name)
    TF_VAR_blob_uri: $(blob-uri)
    TF_VAR_existing_rg: $(existing-rg)
    ARM_CLIENT_ID: $(client-id)
    ARM_CLIENT_SECRET: $(client-secret)
    ARM_SUBSCRIPTION_ID: $(subscription-id)
    ARM_TENANT_ID: $(tenant-id)
  displayName: 'Destroy Azure Resources with Terraform'
  enabled: true

